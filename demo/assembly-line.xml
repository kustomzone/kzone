<?xml version="1.0" encoding="UTF-8" ?>
 
<!--
    Scene with an animated row of boxes.
-->

<scene>
  <spawn position="0 0 10" />

  <billboard position="-1 1 2" rotation="0 1.57 0" scale="2 2 0.25">
    <![CDATA[
      <h1>The assembly line</h1>

      <p>
        This is a line of boxes that are spawned, animated and removed using javascript. You can try
        run into the boxes to see how the physics model works with animated boxes.
      </p>

      <center>
        When you're finished, click the globe below to go to the next scene.
      </center>
    ]]>
  </billboard>

  <link href="/challenge.xml" position="-0.8 1 2" rotation="0 1.57 0" />

  <skybox src="/skyboxes/dark_.png" />

  <script>
    document.addEventListener("ready", function(event) {
      var boxes = [],
        startPosition = new Vector(0,0,0),
        scaleVector = new Vector(1.5,4,0.2);

      function randomColor(){
        var c = (0x10 + ~~(Math.random() * 0xEF)).toString(16);
        return '#' + c + c + c;
      }

      function addBox(index){
        var el = document.createElement("box");

        el.position = new Vector(0,0.5,-index * 5).add(startPosition);
        el.scale = scaleVector;
        el.style.color = randomColor();

        document.scene.appendChild(el);
        boxes.push(el);

        el.addEventListener("collide", function(){
          console.log("Player collided with a box");
        });
      }

      var speed = 10.0 / 10;

      setInterval(function(){
        boxes.forEach(function(box){
          box.position.z += speed;
        });
      }, 1000 / 10);

      setInterval(function(){
        if(boxes.length>9){
          var box = boxes.shift();
          box.parentNode.removeChild(box);
        }

        addBox(10);
      }, 500);
    });
  </script>

</scene>