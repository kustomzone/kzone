{
  "name": "uri-js",
  "version": "1.4.2",
  "description": "An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.",
  "homepage": "http://github.com/garycourt/uri-js",
  "author": {
    "name": "Gary Court",
    "email": "gary.court@gmail.com"
  },
  "main": "./src/uri.js",
  "readme": "# URI.js\r\n\r\nURI.js is an [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt) compliant, scheme extendable URI parsing/validating/resolving library for all JavaScript environments (browsers, Node.js, etc).\r\n\r\n## Loading\r\n\r\nTo load in a browser, use the following tag:\r\n\r\n\t<script type=\"text/javascript\" src=\"uri-js/dist/uri.min.js\"></script>\r\n\t\r\nTo load in a CommonJS (Node.js) environment, simply use:\r\n\r\n\tvar URI = require(\"./uri-js\");\r\n\r\n## API\r\n\r\n### Parsing & Validating\r\n\r\n\tvar components = URI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\");\r\n\t//returns:\r\n\t//{\r\n\t//  errors : [],\r\n\t//  scheme : \"uri\",\r\n\t//  userinfo : \"user:pass\",\r\n\t//  host : \"example.com\",\r\n\t//  port : 123,\r\n\t//  path : \"/one/two.three\",\r\n\t//  query : \"q1=a1&q2=a2\",\r\n\t//  fragment : \"body\"\r\n\t//}\r\n\r\n### Serializing\r\n\r\n\tURI.serialize({scheme : \"http\", host : \"example.com\", fragment : \"footer\"}) === \"http://example.com/#footer\"\r\n\r\n### Resolving\r\n\r\n\tURI.resolve(\"uri://a/b/c/d?q\", \"../../g\") === \"uri://a/g\"\r\n\r\n### Normalizing\r\n\r\n\tURI.normalize(\"HTTP://ABC.com/%7Esmith/home.html\") === \"http://abc.com/~smith/home.html\"\r\n\r\n### Comparison\r\n\r\n\tURI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\") === true\r\n\r\n### Options\r\n\r\nAll of the above functions can accept an additional options argument that is an object that can contain one or more of the following properties:\r\n\r\n*\t`scheme`\r\n\t\r\n\tIndicates the scheme that the URI should be treated as, overriding the URI's normal scheme parsing behavior.\r\n\r\n*\t`reference`\r\n\t\r\n\tIf set to `\"suffix\"`, it indicates that the URI is in the suffix format, and the validator will use the option's `scheme` property to determine the URI's scheme.\r\n\t\r\n*\t`tolerant`\r\n\t\r\n\tIf set to `true`, the parser will not report invalid URIs. It will also relax URI resolving rules.\r\n\r\n## Scheme Extendable\r\n\r\nURI.js supports inserting custom [scheme](http://en.wikipedia.org/wiki/URI_scheme) dependent processing rules. For example, here is the code for HTTP scheme normalization:\r\n\r\n\tURI.SCHEMES[\"http\"] = {\r\n\t\tserialize : function (components, options) {\r\n\t\t\t//normalize the default port\r\n\t\t\tif (components.port === 80) {\r\n\t\t\t\tcomponents.port = undefined;\r\n\t\t\t}\r\n\t\t\t//normalize the empty path\r\n\t\t\tif (!components.path) {\r\n\t\t\t\tcomponents.path = \"/\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn components;\r\n\t\t}\r\n\t};\r\n\r\nCurrently, URI.js has built in support for the following schemes:\r\n\r\n*\thttp \\[[RFC 2616](http://www.ietf.org/rfc/rfc2616.txt)\\]\r\n*\turn \\[[RFC 2141](http://www.ietf.org/rfc/rfc2141.txt)\\]\r\n*\turn:uuid \\[[RFC 4122](http://www.ietf.org/rfc/rfc4122.txt)\\]\r\n\r\n## License\r\n\r\nCopyright 2011 Gary Court. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n1.\tRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\n2.\tRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY GARY COURT \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nThe views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Gary Court.",
  "readmeFilename": "README.md",
  "_id": "uri-js@1.4.2",
  "_shasum": "b5d67221edc6b4be269146ee34082876ed729bd0",
  "_from": "uri-js@~1.4.2",
  "_resolved": "https://registry.npmjs.org/uri-js/-/uri-js-1.4.2.tgz"
}
